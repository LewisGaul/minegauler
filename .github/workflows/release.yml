name: Workflow for creating a release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  pyinstaller:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - uses: actions/checkout@master

      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: "3.9"

      - name: Install Python requirements
        run: |
          pip install wheel
          pip install pyinstaller .[bot]

      - name: Create PyInstaller package
        run: python3 -m scripts.create_release -v -o artefacts/

      - name: Store artefacts
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: artefacts/

  create-release:
    name: Create release in GitHub
    needs: pyinstaller
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      # Get the 'GIT_TAG_NAME' env var.
      - uses: olegtarasov/get-tag@master.1

      # Fetch artefacts from pyinstaller job. Unfortunately, the download
      # involves creating artefact folders, meaning they end up at:
      # ./artefacts/<os>/minegauler-<version>-<os>-<arch>.<ext>
      - name: Fetch artefacts
        uses: actions/download-artifact@master
        with:
          path: artefacts/

      - name: Create release
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ env.GIT_TAG_NAME }}
          body: |
            Changes in this release
            - First change
            - Second change
          files: artefacts/*/minegauler-*
          draft: true
          prerelease: false

  cleanup:
    name: Clean up at the end of the workflow
    runs-on: ubuntu-latest
    needs: create-release
    if: always()
    steps:
      - name: Delete artefacts shared between jobs
        uses: geekyeggo/delete-artifact@master
        with:
          name: |
            ubuntu-latest
            macOS-latest
            windows-latest
          failOnError: false
